-module(cryptoapis_get_transaction_details_by_transaction_id_from_callback_ribs).

-export([encode/1]).

-export_type([cryptoapis_get_transaction_details_by_transaction_id_from_callback_ribs/0]).

-type cryptoapis_get_transaction_details_by_transaction_id_from_callback_ribs() ::
    #{ 'locktime' := integer(),
       'size' := integer(),
       'vSize' := integer(),
       'version' := integer(),
       'vin' := list(),
       'vout' := list(),
       'contract' := binary(),
       'gasLimit' := integer(),
       'gasPrice' := binary(),
       'gasUsed' := binary(),
       'inputData' := binary(),
       'nonce' := integer(),
       'transactionStatus' := binary(),
       'bindingSig' := binary(),
       'expiryHeight' := integer(),
       'joinSplitPubKey' := binary(),
       'joinSplitSig' := binary(),
       'overwintered' := boolean(),
       'vJoinSplit' := list(),
       'vShieldedOutput' := list(),
       'vShieldedSpend' := list(),
       'valueBalance' := binary(),
       'versionGroupId' := binary(),
       'additionalData' := binary(),
       'destinationTag' => integer(),
       'offer' := cryptoapis_get_xrp_ripple_transaction_details_by_transaction_idri_offer:cryptoapis_get_xrp_ripple_transaction_details_by_transaction_idri_offer(),
       'Receive_' := cryptoapis_get_xrp_ripple_transaction_details_by_transaction_idri_receive:cryptoapis_get_xrp_ripple_transaction_details_by_transaction_idri_receive(),
       'sequence' := integer(),
       'status' := binary(),
       'type' := binary(),
       'value' := cryptoapis_get_transaction_details_by_transaction_id_from_callback_ribsx_value:cryptoapis_get_transaction_details_by_transaction_id_from_callback_ribsx_value(),
       'amount' := binary(),
       'bandwidthUsed' := cryptoapis_get_transaction_details_by_transaction_id_from_callback_ribst_bandwidth_used:cryptoapis_get_transaction_details_by_transaction_id_from_callback_ribst_bandwidth_used(),
       'energyUsed' := cryptoapis_get_transaction_details_by_transaction_id_from_callback_ribst_energy_used:cryptoapis_get_transaction_details_by_transaction_id_from_callback_ribst_energy_used(),
       'hasInternalTransactions' := boolean(),
       'hasTokenTransfers' := binary(),
       'input' := binary(),
       'recipients' := binary(),
       'senders' := binary(),
       'gas' := binary(),
       'txid' := binary()
     }.

encode(#{ 'locktime' := Locktime,
          'size' := Size,
          'vSize' := VSize,
          'version' := Version,
          'vin' := Vin,
          'vout' := Vout,
          'contract' := Contract,
          'gasLimit' := GasLimit,
          'gasPrice' := GasPrice,
          'gasUsed' := GasUsed,
          'inputData' := InputData,
          'nonce' := Nonce,
          'transactionStatus' := TransactionStatus,
          'bindingSig' := BindingSig,
          'expiryHeight' := ExpiryHeight,
          'joinSplitPubKey' := JoinSplitPubKey,
          'joinSplitSig' := JoinSplitSig,
          'overwintered' := Overwintered,
          'vJoinSplit' := VJoinSplit,
          'vShieldedOutput' := VShieldedOutput,
          'vShieldedSpend' := VShieldedSpend,
          'valueBalance' := ValueBalance,
          'versionGroupId' := VersionGroupId,
          'additionalData' := AdditionalData,
          'destinationTag' := DestinationTag,
          'offer' := Offer,
          'Receive_' := Receive,
          'sequence' := Sequence,
          'status' := Status,
          'type' := Type,
          'value' := Value,
          'amount' := Amount,
          'bandwidthUsed' := BandwidthUsed,
          'energyUsed' := EnergyUsed,
          'hasInternalTransactions' := HasInternalTransactions,
          'hasTokenTransfers' := HasTokenTransfers,
          'input' := Input,
          'recipients' := Recipients,
          'senders' := Senders,
          'gas' := Gas,
          'txid' := Txid
        }) ->
    #{ 'locktime' => Locktime,
       'size' => Size,
       'vSize' => VSize,
       'version' => Version,
       'vin' => Vin,
       'vout' => Vout,
       'contract' => Contract,
       'gasLimit' => GasLimit,
       'gasPrice' => GasPrice,
       'gasUsed' => GasUsed,
       'inputData' => InputData,
       'nonce' => Nonce,
       'transactionStatus' => TransactionStatus,
       'bindingSig' => BindingSig,
       'expiryHeight' => ExpiryHeight,
       'joinSplitPubKey' => JoinSplitPubKey,
       'joinSplitSig' => JoinSplitSig,
       'overwintered' => Overwintered,
       'vJoinSplit' => VJoinSplit,
       'vShieldedOutput' => VShieldedOutput,
       'vShieldedSpend' => VShieldedSpend,
       'valueBalance' => ValueBalance,
       'versionGroupId' => VersionGroupId,
       'additionalData' => AdditionalData,
       'destinationTag' => DestinationTag,
       'offer' => Offer,
       'receive' => Receive,
       'sequence' => Sequence,
       'status' => Status,
       'type' => Type,
       'value' => Value,
       'amount' => Amount,
       'bandwidthUsed' => BandwidthUsed,
       'energyUsed' => EnergyUsed,
       'hasInternalTransactions' => HasInternalTransactions,
       'hasTokenTransfers' => HasTokenTransfers,
       'input' => Input,
       'recipients' => Recipients,
       'senders' => Senders,
       'gas' => Gas,
       'txid' => Txid
     }.
